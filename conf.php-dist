<?php
// Repositories from which to read the categories.
// repositoryUrl and categoryUrl are twig templates, which take the following input values:
// {{ repositoryId }}    id of the repository
// {{ categoryId }}      id of the category (not for repositoryUrl)
// {{ categoryFormat }}  format of the file (json or yaml)
// {{ branchId }}        id of the branch (not for repositoryUrl)
$repositories = array(
  'default' => array(
    'path' => 'node_modules/openstreetbrowser-categories-main',
    'type' => 'dir',
    // public URL of repository
    'repositoryUrl' => 'https://github.com/example/categories',
    // public URL of source of a category in repository
    'categoryUrl' => 'https://github.com/example/categories/tree/{{ branchId }}/{{ categoryId }}.{{ categoryFormat }}',
  ),
);

// Repositories which should be included from gitea
#$repositoriesGitea = array(
#  'path' => "/home/gitea/gitea-repositories",
#  'url' => "https://www.openstreetbrowser.org/dev",
#);

// Set to true to reload categories on every page visit.
$config['categoriesAlwaysReload'] = true;

// (optional) URL, which points to the OpenStreetBrowser Editor
#$config['urlCategoriesEditor'] = 'editor/';

// URL of OpenStreetMap website - change this for other services
$config['urlOpenStreetMap'] = 'https://www.openstreetmap.org';

// URL of the Overpass API
$config['overpassUrl'] = array(
  '//overpass-api.de/api/interpreter',
  '//api.openstreetmap.fr/oapi/interpreter',
);

// Additional parameters to Overpass (e.g. timeGap)
$config['overpassOptions'] = array(
);

// Acquire a license key from https://www.maxmind.com/ and set it here
#$config['GeoLite2-LicenseKey'] = '';

// Location of the initial view if no IP-location can be resolved. 'zoom' is optional.
$config['defaultView'] = array('lat' => 51.505, 'lon' => -0.09, 'zoom' => 18);

// Shall the initial map view be retrieved via IP location? (default: true)
$config['checkIpLocation'] = true;

// maxZoom (tiles will be scaled if higher than native zoom level). Default: 19.
$config['maxZoom'] = 19;

// cache directory. Must be writeable by the webserver!
#$config['cache'] = 'cache';

// Available base maps; first is default
$config['baseMaps'] = array(
  array(
    'id' => 'osm-mapnik',
    'name' => 'OSM Default',
    'attribution' => '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors',
    'url' => 'https://tile.openstreetmap.org/{z}/{x}/{y}.png',
    'maxZoom' => 19,
  ),
  array(
    'id' => 'osm-cyle',
    'name' => 'OSM CycleMap',
    'attribution' => '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors, Tiles: <a href="http://www.thunderforest.com/">Andy Allan</a>',
    'url' => '//{s}.tile.thunderforest.com/cycle/{z}/{x}/{y}.png?apikey=',
    'maxZoom' => 18,
  ),
  array(
    'id' => 'opentopomap',
    'name' => 'OpenTopoMap',
    'attribution' => '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors, Tiles: <a href="http://opentopomap.org/">OpenTopoMap</a>',
    'url' => '//{s}.tile.opentopomap.org/{z}/{x}/{y}.png',
    'maxZoom' => 17,
  ),
  array(
    'id' => 'transportmap',
    'name' => 'Transport Map',
    'attribution' => '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors, Tiles: <a href="http://www.thunderforest.com/">Andy Allan</a>',
    'url' => '//{s}.tile.thunderforest.com/transport/{z}/{x}/{y}.png?apikey=',
    'maxZoom' => 20,
  ),
  array(
    'id' => 'hot',
    'name' => 'Humanitarian',
    'attribution' => '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors, Tiles: <a href="http://hot.openstreetmap.org/">Humanitarian OpenStreetMap Team</a>',
    'url' => '//tile-{s}.openstreetmap.fr/hot/{z}/{x}/{y}.png',
    'maxZoom' => 20,
  ),
);

// customCategory needs a database
$db_conf = [
  //'dsn' => 'mysql:host=localhost;dbname=openstreetbrowser',
  'dsn' => 'sqlite:data/db.sqlite',
  'username' => 'USERNAME',
  'password' => 'PASSWORD',
];

// List of available user interface languages
$languages = array(
  "en", // English
  "ast", // Asturian
  "ca", // Catalan
  "cs", // Czech
  "be", // Belarusian
  "da", // Danish
  "de", // German
  "el", // Greek
  "es", // Spanish
  "et", // Estonian
  "fr", // French
  "hu", // Hungarian
  "id", // Indonesian
  "it", // Italian
  "ja", // Japanese
  "ko", // Korean
  "ml", // Malayalam
  "nl", // Dutch
  "oc", // Occitan
  "pl", // Polish
  "pt", // Portuguese
  "pt-br", // Portuguese (Brazil)
  "ro", // Romanian
  "ru", // Russian
  "sr", // Serbian
  "sv", // Swedish
  "uk", // Ukrainian
  "nb", // Bokm√•l (Norwegian)
  "th", // Thai
  "tr", // Turkish
  "zh-hans", // Simplified Chinese
);

// Uncomment the following lines to use a MYSQL database for session handling.
// Create database table 'sessions' as described in
// https://github.com/plepe/PHP-MySQL-Sessions/blob/master/README.md
#include "lib/modulekit/mysql-sessions/mysql.sessions.php";
#new Session(new PDO('mysql:dbname=DB', 'USER', 'PASSWORD'));
